
name: ci/cd workflow

on:
  push:
    branches:
      - master
      - features/*
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:7.3
    strategy:
      matrix:
        php: [7.3]

    name: Test - PHP ${{ matrix.php }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Copy ENV Laravel Configuration for CI
        run: cp .env.ci .env

      - name: Install dependencies
        run: composer install

      - name: Evidentia start
        run: php artisan evidentia:start

      - name: Create default instance
          run: php artisan evidentia:createinstance

      - name: Execute tests
        run: vendor/bin/phpunit --verbose

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Copy dotenv file
        run: php -r "file_put_contents(__DIR__ . '/.env', '${{ secrets.DOT_ENV }}');"

      - name: Deploy
        uses: AEnterprise/rsync-deploy@v1.0
        env:
          DEPLOY_KEY: ${{ secrets.KEY }}
          ARGS: '-avzh --exclude=".*"'
          SERVER_PORT: ${{ secrets.PORT }}
          FOLDER: "./"
          SERVER_IP: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DESTINATION: "/var/www/html"
